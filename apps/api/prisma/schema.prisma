generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

////////// TANIA'S MODELS ///////////

model user {
  id                 Int           @id @unique(map: "id") @default(autoincrement())
  name               String        @db.VarChar(255)
  email              String        @unique @db.VarChar(255)
  noTelp             String        @db.VarChar(255)
  isBlocked          Boolean       @default(false)
  limitWrongPassword Int           @default(0)
  password           String        @db.VarChar(350)
  referralCode       String?       @unique
  role               ROLE          @default(CUSTOMER)
  discount           discount[]
  feedback           feedback[]
  point              point[]
  transaction        transaction[]
  event              event[]
}

model point {
  id         Int      @id @unique(map: "id") @default(autoincrement())
  userId     Int
  amount     Int
  dateCreate DateTime @db.Date
  dateExpire DateTime @db.Date
  isDeleted  Boolean  @default(false)
  user       user     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Point_fk1")

  @@index([userId], map: "Point_fk1")
}

model discount {
  id                Int                 @id @unique(map: "id") @default(autoincrement())
  title             String              @db.VarChar(255)
  description       String              @db.VarChar(255)
  dateCreate        DateTime            @db.Date
  dateExpire        DateTime            @db.Date
  isDeleted         Boolean             @default(false)
  percent           Int
  code              String              @unique
  userId            Int
  detailTransaction detailTransaction[]
  user              user                @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Discount_fk1")

  @@index([userId], map: "Discount_fk1")
}

model feedback {
  id       Int    @id @unique(map: "id") @default(autoincrement())
  eventId  Int
  userId   Int
  feedback String @db.VarChar(255)
  event    event  @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Feedback_fk1")
  user     user   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Feedback_fk2")

  @@index([eventId], map: "Feedback_fk1")
  @@index([userId], map: "Feedback_fk2")
}

model location {
  id           Int     @id @unique(map: "id") @default(autoincrement())
  locationName String  @db.VarChar(255)
  event        event[]
}

//////////  BAIM'S MODELS ////////

model event {
  id                Int                 @id @unique(map: "id") @default(autoincrement())
  userId            Int
  namaEvent         String              @db.VarChar(255)
  imgEvent          String
  tanggalEvent      DateTime            @db.Date
  locationId        Int
  type              TYPE
  deskripsiEvent    String              @db.VarChar(255)
  categoriId        Int
  status            STATUS
  detailTransaction detailTransaction[]
  location          location            @relation(fields: [locationId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Event_fk3")
  categori          categori            @relation(fields: [categoriId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Event_fk7")
  user              user                @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Event_fk1")
  feedback          feedback[]
  transaction       transaction[]

  @@index([userId], map: "Event_fk1")
  @@index([locationId], map: "Event_fk3")
  @@index([categoriId], map: "Event_fk7_idx")
}

model transaction {
  id                Int                 @id @unique(map: "id") @default(autoincrement())
  userId            Int
  amount            Int
  createdAt         DateTime
  eventId           Int
  user              user                @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Transaction_fk1")
  event             event               @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Transaction_fk2")
  detailTransaction detailTransaction[]

  @@index([userId], map: "Transaction_fk1")
  @@index([eventId], map: "Transaction_fk2")
}

model detailTransaction {
  id            Int         @id @unique(map: "id") @default(autoincrement())
  discountId    Int
  discount      discount    @relation(fields: [discountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Detail_Transaction_fk2")
  transactionId Int
  transaction   transaction @relation(fields: [transactionId], references: [id])
  event         event?      @relation(fields: [eventId], references: [id])
  eventId       Int?

  @@index([discountId], map: "Detail_Transaction_fk2")
}

model categori {
  id           Int     @id @default(autoincrement())
  categoriName String  @db.VarChar(45)
  event        event[]
}

enum STATUS {
  COMING_SOON
  ONGOING
  COMPLETED
}

enum ROLE {
  CUSTOMER
  ADMIN
}

enum TYPE {
  FREE
  PAID
}
